// Creation Time: 1581530813
(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.Beautify.init();});codiad.Beautify={path:'/plugins/Atheos-Beautify/',beautifyPhp:null,lines:0,row:0,settings:{js:false,json:false,html:false,css:false,auto:false},files:["html","htm","js","json","scss","css","php"],init:function(){var _this=this;$.getScript(this.path+"libs/beautify-css.js");$.getScript(this.path+"libs/beautify-html.js");$.getScript(this.path+"libs/beautify.js");$.getScript(this.path+"libs/ext-beautify.js",function(){_this.beautifyPhp=ace.require("ace/ext/beautify");});this.load();amplify.subscribe('active.onFocus',function(path){if(codiad.editor.getActive()===null)return;var manager=codiad.editor.getActive().commands;manager.addCommand({name:"Beautify",bindKey:{win:"Ctrl-Alt-B",mac:"Command-Alt-B"},exec:function(){_this.beautify();}});});amplify.subscribe('active.onSave',function(path){path=path||codiad.active.getPath();var ext=_this.getExtension(path);if(_this.files.indexOf(ext)!=-1){if(_this.check(path)){var content=codiad.editor.getContent();_this.lines=_this.getLines();_this.row=codiad.editor.getActive().getCursorPosition().row;content=_this.beautifyContent(path,content);if(typeof(content)!=='string'){return true;}
codiad.editor.setContent(content);_this.guessCursorPosition();}}});amplify.subscribe('context-menu.onShow',function(obj){var ext=_this.getExtension(obj.path);if(_this.files.indexOf(ext)!=-1&&ext!=="php"){$('#context-menu').append('<hr class="file-only beautify">');$('#context-menu').append('<a class="file-only beautify" onclick="codiad.Beautify.contextMenu($(\'#context-menu\').attr(\'data-path\'));"><span class="icon-brush"></span>Beautify</a>');}});amplify.subscribe('context-menu.onHide',function(){$('.beautify').remove();});amplify.subscribe('settings.dialog.save',function(){if($('#beautify_form').length>0){codiad.Beautify.save();}});},showDialog:function(){codiad.modal.load(200,this.path+"dialog.php");},save:function(){var _this=this;this.checkSettings("js");this.checkSettings("json");this.checkSettings("html");this.checkSettings("css");this.checkSettings("php");$.post(this.path+"controller.php?action=save",{settings:JSON.stringify(this.settings)},function(data){var json=JSON.parse(data);if(json.status=="error"){codiad.toast.error(json.message);}else{codiad.toast.success(json.message);}
_this.load();});},load:function(){var _this=this;$.getJSON(this.path+"controller.php?action=load",function(json){_this.settings=json;});},get:function(){this.setSettings("js");this.setSettings("json");this.setSettings("html");this.setSettings("css");this.setSettings("php");},getLines:function(content){content=content||codiad.editor.getContent();return(content.match(/\n/g)||[]).length+1;},guessCursorPosition:function(){if(localStorage.getItem("codiad.plugin.beautify.guessCursorPosition")=="true"){var newLines=this.getLines();var factor=newLines / this.lines;var newRow=Math.floor(factor*this.row);codiad.editor.getActive().clearSelection();codiad.editor.getActive().moveCursorToPosition({"row":newRow,"column":0});}},setSettings:function(ext){if(this.settings.auto[ext]===true){$('#beautify_'+ext).attr("checked","checked");}},checkSettings:function(ext){if($('#beautify_'+ext).attr("checked")=="checked"){this.settings.auto[ext]=true;}else{this.settings.auto[ext]=false;}},contextMenu:function(path){var _this=this;$.get(this.path+"controller.php?action=getContent&path="+path,function(data){var content=_this.beautifyContent(path,data);$.post(_this.path+"controller.php?action=saveContent&path="+path,{"content":content},function(result){var json=JSON.parse(result);if(json.status=="error"){codiad.toast.error(json.message);}else{codiad.toast.success(json.message);}});});},beautifyContent:function(path,content,settings){var _this=this;_this.checkBeautifySettings();if(typeof(settings)=='undefined'){settings=this.settings.beautify;}
var ext=this.getExtension(path);if(ext=="html"||ext=="htm"){return html_beautify(content,settings);}else if(ext=="css"||ext=="scss"){return css_beautify(content,settings);}else if(ext=="js"||ext=="json"){return js_beautify(content,settings);}else if(ext=="php"){_this.beautifyPhp.beautify(codiad.editor.getActive().getSession());return true;}else{return false;}},beautify:function(){var _this=this;var settings=this.settings.beautify;var path=codiad.active.getPath();var editor=codiad.editor.getActive();var session=editor.getSession();var selText=codiad.editor.getSelectedText();var range=editor.selection.getRange();var fn=function(range,text){if(typeof(text)=='undefined'){settings.indent_level="keep";range.start.column=0;text=session.getTextRange(range);}
text=_this.beautifyContent(path,text,settings);if(typeof(text)=='string'){session.replace(range,text);}};if(selText!==""){if(editor.selection.inMultiSelectMode){var multiRanges=editor.selection.getAllRanges();for(var i=0;i<multiRanges.length;i++){fn(multiRanges[i]);}}else{fn(range);}}else{this.row=codiad.editor.getActive().getCursorPosition().row;this.lines=this.getLines();var content=codiad.editor.getContent();range=editor.selectAll()||editor.selection.getRange();fn(range,content);this.guessCursorPosition();}},check:function(path){var ext=this.getExtension(path);if(ext=="htm"){ext="html";}
return this.settings.auto[ext];},checkBeautifySettings:function(){var char="";var tab=1;if(codiad.editor.settings.softTabs){char=" ";tab=4;}else{char="\t";tab=1;}
this.settings.beautify.indent_char=char;this.settings.beautify.indent_size=tab;},getExtension:function(path){return path.substring(path.lastIndexOf(".")+1);}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.CodeGit.init();});codiad.CodeGit={path:'/plugins/Atheos-CodeGit/',location:'',line:0,files:[],network_graph:{},init:function(){var _this=this;amplify.subscribe('filemanager.onIndex',function(obj){setTimeout(function(){$.each(obj.files,function(i,item){if(_this.basename(item.name)=='.git'){$('[data-path="'+_this.dirname(item.path)+'"]').addClass('repo');}else if(item.type=='directory'){$.getJSON(_this.path+'controller.php?action=checkRepo&path='+item.path,function(result){if(result.status){$('[data-path="'+_this.dirname(item.path)+'"]').addClass('repo');}});}});_this.showRepoStatus();if(_this._poller){clearInterval(_this._poller);delete _this._poller;}},0);});amplify.subscribe('context-menu.onShow',function(obj){var path=$(obj.e.target).attr('data-path'),root=$('#project-root').attr('data-path'),counter=0;if($(obj.e.target).data('type')=='directory'){$('#context-menu').append('<hr class="directory-only code_git">');if($(obj.e.target).hasClass('repo')){$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.showDialog(\'overview\', $(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Open CodeGit</a>');$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.submoduleDialog(\''+path+'\', $(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Add Submodule</a>');}else{$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.gitInit($(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Git Init</a>');$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.clone($(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Git Clone</a>');while(path!=root){path=_this.dirname(path);if($('[data-path="'+path+'"]').hasClass('repo')){$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.submoduleDialog(\''+path+'\', $(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Add Submodule</a>');break;}
if(counter>=10)break;counter++;}}}else{var file=path;while(path!=root){path=_this.dirname(path);if($('[data-path="'+path+'"]').hasClass('repo')){$('#context-menu').append('<hr class="file-only code_git">');$('#context-menu').append('<a class="file-only code_git" onclick="codiad.CodeGit.contextMenuDiff($(\'#context-menu\').attr(\'data-path\'), \''+path+'\');"><span class="icon-flow-branch"></span>Git Diff</a>');$('#context-menu').append('<a class="file-only code_git" onclick="codiad.CodeGit.blame($(\'#context-menu\').attr(\'data-path\'), \''+path+'\');"><span class="icon-flow-branch"></span>Git Blame</a>');$('#context-menu').append('<a class="file-only code_git" onclick="codiad.CodeGit.history($(\'#context-menu\').attr(\'data-path\'), \''+path+'\');"><span class="icon-flow-branch"></span>Git History</a>');if(_this.basename(file)=='.gitmodules'){$('#context-menu').append('<a class="directory-only code_git" onclick="codiad.CodeGit.initSubmodule(\''+_this.dirname(file)+'\', $(\'#context-menu\').attr(\'data-path\'));"><span class="icon-flow-branch"></span>Init Submodule</a>');}
break;}
if(counter>=10)break;counter++;}}});amplify.subscribe("context-menu.onHide",function(){$('.code_git').remove();});$('#file-manager').before('<div id="git-repo-stat-wrapper" class="hidden">Commit Status: <span id="git-repo-stat"></span></div>');_this.addStatusIcon();$("#git-repo-stat-wrapper").click(function(){codiad.CodeGit.showDialog('overview',codiad.project.getCurrent());});$('#current-file').after('<div class="divider"></div><div id="git-stat"></div>');amplify.subscribe('active.onFocus',function(path){_this.numstat(path);_this.repostat();});amplify.subscribe('active.onSave',function(path){setTimeout(function(){_this.numstat(path);_this.repostat();},50);});amplify.subscribe('active.onClose',function(path){_this.repostat();$('#git-stat').html("");});amplify.subscribe('active.onRemoveAll',function(){_this.repostat();$('#git-stat').html("");});amplify.subscribe('settings.changed',function(){_this.showRepoStatus();});amplify.subscribe('settings.loaded',function(){_this.showRepoStatus();});$('.git_area #check_all').live("click",function(e){if($('.git_area #check_all').attr("checked")=="checked"){$('.git_area input:checkbox').attr("checked","checked");}else{$('.git_area input:checkbox').removeAttr("checked");}});$('.git_area input:checkbox:not(#check_all)').live("click",function(e){if($(this).attr("checked")!="checked"){if($('.git_area #check_all').attr("checked")=="checked"){$('.git_area #check_all').removeAttr("checked");}}else{var all=true;$('.git_area input:checkbox:not(#check_all)').each(function(i,item){all=all&&($(this).attr("checked")=="checked");});if(all){$('.git_area #check_all').attr("checked","checked");}}});$('.commit_hash').live('click',function(){var commit;if(typeof($(this).attr('data-hash'))!='undefined'){commit=$(this).attr('data-hash');}else{commit=$(this).text();}
commit=commit.replace("commit","").trim();codiad.CodeGit.showCommit(codiad.CodeGit.location,commit);});$('.git_area .git_diff').live("click",function(e){e.preventDefault();var line=$(this).attr('data-line');var path=$('.git_area .git_list .file[data-line="'+line+'"]').text();_this.files=[];_this.files.push(path);_this.showDialog('diff',_this.location);});$('.git_area .git_undo').live("click",function(e){e.preventDefault();var line=$(this).attr('data-line');var path=$('.git_area .git_list .file[data-line="'+line+'"]').text();_this.checkout(path,_this.location);_this.showDialog('overview',_this.location);});$('.git_diff_area .git_undo').live("click",function(e){e.preventDefault();_this.checkout(_this.files[0],_this.location);_this.showDialog('overview',_this.location);});},showRepoStatus:function(){var _this=this;if($('#project-root').hasClass('repo')&&_this.isEnabledRepoStatus()){_this._poller=setInterval(function(){_this.repostat();},10000);_this.addStatusIcon();if(_this.isEnabledWrapper()){$("#git-repo-stat-wrapper").show();}else{$("#git-repo-stat-wrapper").hide();}
$("#git-repo-status-icon").show();_this.repostat();}else{$("#git-repo-stat-wrapper").hide();$("#git-repo-status-icon").hide();}},showSidebarDialog:function(){if(!$('#project-root').hasClass('repo')){codiad.toast.error('Project root has no repository. Use the context menu!');return;}
codiad.CodeGit.showDialog('overview',$('#project-root').attr('data-path'));},showDialog:function(type,path){this.location=path||this.location;codiad.modal.load(600,this.path+'dialog.php?action='+type);},showCommitDialog:function(path){var _this=this;path=_this.getPath(path);$.getJSON(this.path+'controller.php?action=getSettings&path='+path,function(data){if(data.status=="success"){if(data.data.email===""){codiad.toast.notice("Please tell git who you are:");_this.showDialog('userConfig',_this.location);}else{var files=[],line=0,file="";$('.git_area .git_list input:checkbox[checked="checked"]').each(function(i,item){line=$(item).attr('data-line');file=$('.git_area .git_list .file[data-line="'+line+'"]').text();files.push(file);});_this.files=files;_this.showDialog('commit',_this.location);}}else{codiad.toast.error(data.message);}});},gitInit:function(path){$.getJSON(this.path+'controller.php?action=init&path='+path,function(result){codiad.toast[result.status](result.message);if(result.status=='success'){$('.directory[data-path="'+path+'"]').addClass('hasRepo');codiad.filemanager.rescan(path);}});},clone:function(path,repo,init_submodules){var _this=this;init_submodules=init_submodules||"false";if(typeof(repo)=='undefined'){this.showDialog('clone',path);}else{codiad.modal.unload();$.getJSON(_this.path+'controller.php?action=clone&path='+path+'&repo='+repo+'&init_submodules='+init_submodules,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();codiad.modal.unload();$.post(_this.path+'controller.php?action=clone&path='+path+'&repo='+repo+'&init_submodules='+init_submodules,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(path);}});};}else{codiad.toast[result.status](result.message);}
if(result.status=='success'){codiad.filemanager.rescan(path);}});}},diff:function(path,repo){if(!path||!repo)return;var _this=this;repo=this.getPath(repo);$.getJSON(this.path+'controller.php?action=diff&repo='+repo+'&path='+path,function(result){if(result.status!='success'){codiad.toast[result.status](result.message);_this.showDialog('overview',repo);return;}
result.data=_this.renderDiff(result.data);$('.git_diff').append(result.data.join(""));});},contextMenuDiff:function(path,repo){this.location=repo;path=path.replace(repo+"/","");this.files=[];this.files.push(path);this.showDialog('diff',repo);},commit:function(path,msg){var _this=this;path=this.getPath(path);var message=$('.git_commit_area #commit_msg').val();this.showDialog('overview',this.location);$.post(this.path+'controller.php?action=add&path='+path,{files:JSON.stringify(_this.files)},function(result){result=JSON.parse(result);if(result.status=='error'){codiad.toast.error(result.message);return;}
$.post(_this.path+'controller.php?action=commit&path='+path,{message:message},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);_this.status(path);});});},filesDiff:function(){var _this=this;$.each(this.files,function(i,item){_this.diff(item,_this.location);});},push:function(){var _this=this;var remote=$('.git_push_area #git_remotes').val();var branch=$('.git_push_area #git_branches').val();this.showDialog('overview',this.location);$.getJSON(this.path+'controller.php?action=push&path='+this.location+'&remote='+remote+'&branch='+branch,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=push&path='+_this.location+'&remote='+remote+'&branch='+branch,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else if(result.status=='passphrase_required'){codiad.toast.error(result.message);_this.showDialog('passphrase',_this.location);_this.login=function(){var passphrase=$('.git_login_area #passphrase').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=push&path='+_this.location+'&remote='+remote+'&branch='+branch,{passphrase:passphrase},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else{codiad.toast[result.status](result.message);}});},pull:function(){var _this=this;var remote=$('.git_push_area #git_remotes').val();var branch=$('.git_push_area #git_branches').val();this.showDialog('overview',this.location);$.getJSON(this.path+'controller.php?action=pull&path='+this.location+'&remote='+remote+'&branch='+branch,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=pull&path='+_this.location+'&remote='+remote+'&branch='+branch,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else if(result.status=='passphrase_required'){codiad.toast.error(result.message);_this.showDialog('passphrase',_this.location);_this.login=function(){var passphrase=$('.git_login_area #passphrase').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=pull&path='+_this.location+'&remote='+remote+'&branch='+branch,{passphrase:passphrase},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else{codiad.toast[result.status](result.message);}});},fetch:function(){var _this=this;var remote=$('.git_remote_area #git_remotes').val();this.showDialog('overview',this.location);$.getJSON(this.path+'controller.php?action=fetch&path='+this.location+'&remote='+remote,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=fetch&path='+_this.location+'&remote='+remote,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else if(result.status=='passphrase_required'){codiad.toast.error(result.message);_this.showDialog('passphrase',_this.location);_this.login=function(){var passphrase=$('.git_login_area #passphrase').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=fetch&path='+_this.location+'&remote='+remote,{passphrase:passphrase},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);});};}else{codiad.toast[result.status](result.message);}});},checkout:function(path,repo){var result=confirm("Are you sure to undo the changes on: "+path);if(result){$.getJSON(this.path+'controller.php?action=checkout&repo='+repo+'&path='+path,function(result){codiad.toast[result.status](result.message);if(codiad.active.isOpen(repo+"/"+path)){codiad.toast.notice("Reloading file after undoing changes");codiad.active.close(repo+"/"+path);codiad.filemanager.openFile(repo+"/"+path);}});}},status:function(path){path=this.getPath(path);this.files=[];var _this=this;$.getJSON(this.path+'controller.php?action=status&path='+path,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
$('.git_list tbody').html('');var added,deleted,modified,renamed,untracked;added=result.data.added;deleted=result.data.deleted;modified=result.data.modified;renamed=result.data.renamed;untracked=result.data.untracked;$.each(added,function(i,item){_this.addLine("Added",item);});$.each(deleted,function(i,item){_this.addLine("Deleted",item);});$.each(modified,function(i,item){_this.addLine("Modified",item);});$.each(renamed,function(i,item){_this.addLine("Renamed",item);});$.each(untracked,function(i,item){_this.addLine("Untracked",item);});_this.setBranch(result.data.branch);});},log:function(repo,path){repo=this.getPath(repo);var component="";if(typeof(path)!=='undefined'){component='&path='+this.encode(path);$('.git_log_area .path').text(path);}else if(this.files.length!==0){component='&path='+this.encode(this.files[0]);$('.git_log_area .path').text(this.files[0]);}
$.getJSON(this.path+'controller.php?action=log&repo='+this.encode(repo)+component,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
$.each(result.data,function(i,item){item=item.replace(new RegExp(" ","g"),"&nbsp;");if(item.indexOf("commit")===0){$('.git_log_area .git_log').append('<li class="commit_hash">'+item+'</li>');}else{$('.git_log_area .git_log').append('<li>'+item+'</li>');}});});},getRemotes:function(path){path=this.getPath(path);$.getJSON(this.path+'controller.php?action=getRemotes&path='+path,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
$.each(result.data,function(i,item){$('#git_remotes').append('<option value="'+i+'">'+i+'</option>');});$.each(result.data,function(i,item){$('.git_remote_info').html(item);return false;});$('#git_remotes').live('change',function(){var value=$('#git_remotes').val();$('.git_remote_info').html(result.data[value]);});});},newRemote:function(path){var _this=this;path=this.getPath(path);var name=$('.git_new_remote_area #remote_name').val();var url=$('.git_new_remote_area #remote_url').val();$.getJSON(this.path+'controller.php?action=newRemote&path='+path+'&name='+name+'&url='+url,function(result){_this.showDialog('overview',_this.location);codiad.toast[result.status](result.message);});},removeRemote:function(path){var _this=this;path=this.getPath(path);var name=$('#git_remotes').val();var result=confirm("Are you sure to remove the remote: "+name);if(result){$.getJSON(this.path+'controller.php?action=removeRemote&path='+path+'&name='+name,function(result){codiad.toast[result.status](result.message);});}
this.showDialog('overview',this.location);},renameRemote:function(path){path=this.getPath(path);var name=$('#git_remote').text();var newName=$('#git_new_name').val();$.getJSON(this.path+'controller.php?action=renameRemote&path='+path+'&name='+name+'&newName='+newName,function(result){codiad.toast[result.status](result.message);});this.showDialog('overview',this.location);},getRemoteBranches:function(path){path=this.getPath(path);$.getJSON(this.path+'controller.php?action=getRemoteBranches&path='+path,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
$.each(result.data.branches,function(i,item){$('#git_remote_branches').append('<option value="'+item+'">'+item+'</option>');});$('#git_new_branch').val(result.data.current.substr(result.data.current.search('/')+1));$('#git_remote_branches').val(result.data.current);});},checkoutRemote:function(path){path=this.getPath(path);var remoteName=$('#git_remote_branches').val();var name=$('#git_new_branch').val();$.getJSON(this.path+'controller.php?action=checkoutRemote&path='+path+'&name='+name+'&remoteName='+remoteName,function(result){codiad.toast[result.status](result.message);});this.showDialog('remote',this.location);},getBranches:function(path){path=this.getPath(path);$.getJSON(this.path+'controller.php?action=getBranches&path='+path,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
$.each(result.data.branches,function(i,item){$('#git_branches').append('<option value="'+item+'">'+item+'</option>');});$('#git_branches').val(result.data.current);});},newBranch:function(path){var _this=this;path=this.getPath(path);var name=$('.git_new_branch_area #branch_name').val();$.getJSON(this.path+'controller.php?action=newBranch&path='+path+'&name='+name,function(result){_this.showDialog('branches',_this.location);codiad.toast[result.status](result.message);});},deleteBranch:function(path){path=this.getPath(path);var name=$('#git_branches').val();var result=confirm("Are you sure to remove the branch: "+name);if(result){$.getJSON(this.path+'controller.php?action=deleteBranch&path='+path+'&name='+name,function(result){codiad.toast[result.status](result.message);});}
this.showDialog('branches',this.location);},checkoutBranch:function(path){path=this.getPath(path);var name=$('#git_branches').val();$.getJSON(this.path+'controller.php?action=checkoutBranch&path='+path+'&name='+name,function(result){codiad.toast[result.status](result.message);});this.showDialog('overview',this.location);},renameBranch:function(path){path=this.getPath(path);var name=$('#git_branch').text();var newName=$('#git_new_name').val();$.getJSON(this.path+'controller.php?action=renameBranch&path='+path+'&name='+name+'&newName='+newName,function(result){codiad.toast[result.status](result.message);});this.showDialog('overview',this.location);},merge:function(path){var _this=this;path=this.getPath(path);var name=$('#git_branches').val();var result=confirm("Are you sure to merge "+name+" into the current branch?");if(result){$.getJSON(this.path+'controller.php?action=merge&path='+path+'&name='+name,function(result){codiad.toast[result.status](result.message);_this.status(_this.location);});}
this.showDialog('overview',this.location);},rename:function(fPath){var _this=this;var path=_this.dirname(fPath);var old_name=fPath.replace(path,"").substr(1);if(old_name.length===0||old_name===fPath){codiad.filemanager.renameNode(fPath);return;}
var shortName=codiad.filemanager.getShortName(fPath);var type=codiad.filemanager.getType(fPath);codiad.modal.load(250,codiad.filemanager.dialog,{action:'rename',path:fPath,short_name:shortName,type:type});$('#modal-content form').live('submit',function(e){e.preventDefault();var newName=$('#modal-content form input[name="object_name"]').val();var arr=fPath.split('/');var temp=[];for(i=0;i<arr.length-1;i++){temp.push(arr[i]);}
var newPath=temp.join('/')+'/'+newName;codiad.modal.unload();$.getJSON(_this.path+"controller.php?action=rename&path="+path+"&old_name="+old_name+"&new_name="+newName,function(data){if(data.status!='error'){codiad.toast.success(type.charAt(0).toUpperCase()+type.slice(1)+' Renamed');var node=$('#file-manager a[data-path="'+fPath+'"]');node.attr('data-path',newPath).html(newName);if(type=='file'){curExtClass='ext-'+codiad.filemanager.getExtension(fPath);newExtClass='ext-'+codiad.filemanager.getExtension(newPath);$('#file-manager a[data-path="'+newPath+'"]').removeClass(curExtClass).addClass(newExtClass);}else{codiad.filemanager.repathSubs(path,newPath);}
codiad.active.rename(fPath,newPath);}else{codiad.toast.error(data.message);codiad.filemanager.renameNode(fPath);}});});},submoduleDialog:function(repo,path){this.location=repo;if(repo===path){path="";}else{path=path.replace(repo+"/","");}
this.files=[];this.files.push(path);this.showDialog('submodule');},submodule:function(repo,dir,submodule){var _this=this;repo=repo||this.location;path=dir;if(this.files[0]!=""){path=this.files[0]+"/"+dir;}
_this.showDialog('overview',repo);$.getJSON(this.path+'controller.php?action=submodule&repo='+repo+'&path='+path+'&submodule='+submodule,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=submodule&repo='+repo+'&path='+path+'&submodule='+submodule,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(repo);}});};}else if(result.status=='passphrase_required'){codiad.toast.error(result.message);_this.showDialog('passphrase',_this.location);_this.login=function(){var passphrase=$('.git_login_area #passphrase').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=submodule&repo='+repo+'&path='+path+'&submodule='+submodule,{passphrase:passphrase},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(repo);}});};}else{codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(repo);}}});},initSubmodule:function(path){var _this=this;path=path||this.location;$.getJSON(this.path+'controller.php?action=initSubmodule&path='+path,function(result){if(result.status=='login_required'){codiad.toast.error(result.message);_this.showDialog('login',_this.location);_this.login=function(){var username=$('.git_login_area #username').val();var password=$('.git_login_area #password').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=initSubmodule&path='+path,{username:username,password:password},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(path);}});};}else if(result.status=='passphrase_required'){codiad.toast.error(result.message);_this.showDialog('passphrase',_this.location);_this.login=function(){var passphrase=$('.git_login_area #passphrase').val();_this.showDialog('overview',_this.location);$.post(_this.path+'controller.php?action=initSubmodule&path='+path,{passphrase:passphrase},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(path);}});};}else{codiad.toast[result.status](result.message);if(result.status=='success'){codiad.filemanager.rescan(path);}}})},numstat:function(path){if(typeof(path)=='undefined'){path=codiad.active.getPath();}
$.getJSON(this.path+'controller.php?action=numstat&path='+path,function(json){var insert="";if(json.status!="error"){var data=json.data;insert='<span class="icon-flow-branch"></span>'+data.branch+' +'+data.insertions+',-'+data.deletions;}
$('#git-stat').html(insert);});},repostat:function(){path=codiad.project.getCurrent();$.getJSON(this.path+'controller.php?action=status&path='+path,function(json){var insert="Unknown",cls="";if(json.status!="error"){var data=json.data;if(data.added.length!==0||data.deleted.length!==0||data.modified.length!==0||data.renamed.length!==0){insert="Uncommitted";cls="invalid";}else if(data.untracked.length!==0){insert="Untracked";cls="untracked";}else{insert="Committed";cls="valid";}}
$('#git-repo-stat').html(insert);$('#git-repo-stat-wrapper').removeClass("git-repo-stat-valid git-repo-stat-invalid git-repo-stat-untracked").addClass("git-repo-stat-"+cls);$("#git-repo-status-icon").removeClass("git-repo-icon-valid git-repo-icon-invalid git-repo-icon-untracked").addClass("git-repo-icon-"+cls);});},showCommit:function(path,commit){var _this=this;path=this.getPath(path);this.showDialog('showCommit',path);$.getJSON(this.path+'controller.php?action=showCommit&path='+this.encode(path)+'&commit='+commit,function(result){$('.git_show_commit_area .hash').text(commit);if(result.status!="success"){codiad.toast.error(result.message);_this.showDialog('overview',path);}
result.data=_this.renderDiff(result.data);$('.git_show_commit_area .content ul').append(result.data.join(""));});},blame:function(path,repo){var _this=this;this.location=repo;path=path.replace(repo+"/","");this.showDialog('blame',repo);$.getJSON(this.path+'controller.php?action=blame&repo='+this.encode(repo)+'&path='+this.encode(path),function(result){if(result.status!="success"){codiad.toast.error(result.message);_this.showDialog('overview',repo);}
$('.git_blame_area table thead th').text(path);var hashRegExp=/^[a-z0-9]{40}/;var data=result.data,starts,startIndexes=[],segments=[],s,e,i;starts=data.filter(function(line){return hashRegExp.test(line);});for(i=0;i<starts.length;i++){startIndexes.push(data.indexOf(starts[i]));}
for(i=0;i<starts.length;i++){s=startIndexes[i];e=(i<(starts.length-1))?(startIndexes[i+1]):(data.length);segments.push(data.slice(s,e));}
var hash=segments[0][0].match(hashRegExp)[0];var unique=[{segment:segments[0],hash:hash,lines:[segments[0][12]]}];for(i=1;i<segments.length;i++){if(hash===segments[i][0].match(hashRegExp)[0]){unique[unique.length-1].lines.push(segments[i][12]);}else{hash=segments[i][0].match(hashRegExp)[0];unique.push({segment:segments[i],hash:hash,lines:[segments[i][12]]});}}
var output="",msg,date,name,line;for(i=0;i<unique.length;i++){msg=unique[i].segment[9].replace("summary ","");date=unique[i].segment[7].replace("committer-time ","");date=new Date(date*1000);date=(date.getMonth()+1)+"/"+date.getDate()+"/"+date.getFullYear();name=unique[i].segment[5].replace("committer ","");hash=unique[i].hash;output+='<tr><td>'+msg+'<br>'+name+': '+date+'</td>';output+='<td class="commit_hash" data-hash="'+hash+'">'+hash.substr(0,8)+'</td><td><ol>';for(var j=0;j<unique[i].lines.length;j++){line=unique[i].lines[j].replace(new RegExp('\t','g'),' ').replace(new RegExp(' ','g'),"&nbsp;").replace(new RegExp('\n','g'),"<br>");output+='<li>'+line+'</li>';}
output+='</ol></td></tr>';}
$('.git_blame_area table tbody').html(output);});},history:function(path,repo){this.location=repo;path=path.replace(repo+"/","");this.files=[];this.files.push(path);this.showDialog('log',repo);},network:function(path){var _this=this;path=this.getPath(path);this.showDialog('network',path);$.getJSON(this.path+'controller.php?action=network&path='+this.encode(path),function(result){_this.network_graph.setData(result.data);_this.network_graph.generate();});},login:function(){},setSettings:function(path){var _this=this;var settings={};path=this.getPath(path);$('.git_settings_area input:not(.no_setting)').each(function(i,el){settings[$(el).attr("id")]=$(el).val();});$.post(this.path+'controller.php?action=setSettings&path='+path,{settings:JSON.stringify(settings)},function(result){result=JSON.parse(result);codiad.toast[result.status](result.message);_this.showDialog('overview',_this.location);});},getSettings:function(path){path=this.getPath(path);$.getJSON(this.path+'controller.php?action=getSettings&path='+path,function(result){if(result.status=='error'){codiad.toast.error(result.message);return;}
var local=false;$.each(result.data,function(i,item){if(/\//.test(i)){return;}
$('.git_settings_area #'+i).val(item);if(/^local_/.test(i)){local=true;}});if(!local){$('#box_local').click();}});},getPath:function(path){if(typeof(path)=='undefined'){return this.location;}else{return path;}},basename:function(path){return path.replace(/\\/g,'/').replace(/.*\//,'');},dirname:function(path){if(path){return path.replace(/\\/g,'/').replace(/\/[^\/]*$/,'');}
return false;},encode:function(string){return encodeURIComponent(string);},addLine:function(status,name){var line=this.line;var element=`<tr>
       <td>
       <input type="checkbox" class="large" data-line="${line}">
       </td>
       <td class="' + status.toLowerCase() + '">${status}</td>
       <td data-line="${line}" class="file">${name}</td>
       <td>
       <button class="git_button git_diff" data-line="${line}">Diff</button>
       <button class="git_button git_undo" data-line="${line}">Undo</button>
       </td>
       </tr>`;$('.git_list tbody').append(element);this.line++;},renderDiff:function(array){var output=[],element,item;for(var i=0;i<array.length;i++){item=array[i];element=item.replace(new RegExp('\t','g'),' ').replace(new RegExp(' ','g'),"&nbsp;").replace(new RegExp('\n','g'),"<br>");if(item.indexOf('+++')===0||item.indexOf('---')===0||/^index [0-9a-z]{7}..[0-9a-z]{7}/.test(item)||/^new file mode [0-9]{6}/.test(item)){continue;}else if(/^diff --git a\/.+ b\/.+/.test(item)){element=item.match(/^diff --git a\/.+ b\/(.+)/);element='<li class="file-info">'+element[1]+'</li>';}else if(/^@@ -[0-9,]+ \+[0-9,]+ @@/.test(item)){element='<li class="wrapper">'+element+'</li>';}else if(item.indexOf('+')===0&&item.indexOf('+++')!==0){element='<li class="plus">'+element+'</li>';}else if(item.indexOf('-')===0&&item.indexOf('---')!==0){element='<li class="minus">'+element+'</li>';}else{element='<li>'+element+'</li>';}
output.push(element);}
return output;},setBranch:function(branch){$('.git_area .branch').text(branch);},addStatusIcon:function(){if($("span#git-repo-status-icon").length<1){}},isEnabledRepoStatus:function(){var setting=localStorage.getItem('codiad.plugin.codegit.disableRepoStatus'),ret=true;if(setting==="true"){ret=false;}
return(ret);},isEnabledWrapper:function(){var setting=localStorage.getItem('codiad.plugin.codegit.disableHeader'),ret=true;if(setting==="true"){ret=false;}
return(ret);},suppressCommitDiff:function(){return false||localStorage.getItem('codiad.plugin.codegit.suppressCommitDiff')=="true";}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.Compress.init();});codiad.Compress={path:'/plugins/Atheos-Compress/',file:"",settings:false,init:function(){var _this=this;$.getScript(this.path+"libs/uglifyjs.js");$.getScript(this.path+"libs/cssmin.js");amplify.subscribe("context-menu.onShow",function(obj){var ext=_this.getExtension(obj.path);if(ext=="css"||ext=="js"){$('#context-menu').append('<hr class="file-only compress">');$('#context-menu').append('<a class="file-only compress" onclick="codiad.Compress.compress($(\'#context-menu\').attr(\'data-path\'));"><span class="icon-feather"></span>Compress</a>');}});amplify.subscribe("context-menu.onHide",function(){$('.compress').remove();});amplify.subscribe('active.onOpen',function(path){if(codiad.editor.getActive()){var manager=codiad.editor.getActive().commands;manager.addCommand({name:'Compress',bindKey:{win:'Ctrl-Alt-C',mac:'Command-Alt-C'},exec:function(e){_this.compress();}});}});amplify.subscribe('active.onSave',function(path){path=path||codiad.active.getPath();var ext=_this.getExtension(path);if(_this.compressOnSave()&&_this.checkExtension(ext)){var session=codiad.active.sessions[path];var content=session.getValue();content=_this.compressCode(ext,content);_this.saveCode(path,content);}});},compress:function(path){if(typeof(path)=='undefined'){path=codiad.active.getPath();}
var _this=this;this.file=path;var ext=this.getExtension(path);if(!this.checkExtension(ext)){return false;}
$.get(this.path+"controller.php?action=getContent&path="+path,function(code){code=_this.compressCode(ext,code);_this.saveCode(path,code);});},compressCode:function(ext,code){if(ext=="css"){return this.minify(code);}else if(ext=="js"){return this.uglify(code);}},saveCode:function(path,code){var ext=this.getExtension(path);$.post(this.path+"controller.php?action=compress"+ext.toUpperCase()+"&path="+path,{"code":code},function(data){data=JSON.parse(data);if(data.status=="error"){codiad.message.error(data.message);}else{codiad.message.success(data.message);codiad.filemanager.rescan($('#project-root').attr('data-path'));}});},minify:function(code){return YAHOO.compressor.cssmin(code);},uglify:function(code){return UglifyJS.minify(code);},getExtension:function(path){return path.substring(path.lastIndexOf(".")+1);},checkExtension:function(ext){return(ext=="css"||ext=="js");},compressOnSave:function(){return false||localStorage.getItem('codiad.plugin.compress.compressOnSave')=="true";}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/',instance=null;$(function(){codiad.Drag.init();});codiad.Drag={path:curpath,files:[],template:"",init:function(){var _this=this;instance=this;var fn=function(){$('#file-manager a:not(#project-root)').draggable({opacity:0.85,start:_this.start,stop:_this.stop,zIndex:100,});$('a[data-type="directory"], a[data-type="root"]').droppable({accept:"#file-manager a",drop:_this.drop,over:_this.over,out:_this.out});};amplify.subscribe('filemanager.onIndex',function(obj){setTimeout(fn,250);setTimeout(function(){$.each(instance.files,function(i,item){codiad.filemanager.openFile(item,false);});instance.files=[];},250);});amplify.subscribe('filemanager.onCreate',function(obj){setTimeout(fn,250);});amplify.subscribe('filemanager.onPaste',function(obj){setTimeout(fn,250);});amplify.subscribe('filemanager.onUpload',function(obj){setTimeout(fn,250);});var apply=function(){$('#file-manager').append(_this.template);$('#drag_append').droppable({accept:'#file-manager a[data-type="file"]',drop:_this.appendDrop,over:_this.over,out:_this.out});$('#drag_insert').droppable({accept:'#file-manager a[data-type="file"]',drop:_this.insertDrop,over:_this.over,out:_this.out});};$.get(this.path+'template.html',function(html){_this.template=html;apply();});amplify.subscribe('filemanager.onIndex',function(obj){if(obj.path==$('#project-root').attr('data-path')){setTimeout(function(){apply();},100);}});},start:function(){if(codiad.editor.getActive()!==null&&instance.__editEnabled()){$('#dragdrop').show();}},stop:function(){$('#dragdrop').hide();$('#dragdrop .drop_over').removeClass('drop_over');},drop:function(event,ui){var dest=$(this).attr('data-path');var source=$(ui.draggable).attr('data-path');var target=dest+instance.getName(source);if(instance.isDir(ui.draggable)){$.each(codiad.active.sessions,function(i,item){if(instance.startsWith(i,source)){codiad.active.save(i);codiad.active.close(i);instance.files.push(i.replace(source,target));}});}else{if(codiad.active.isOpen(source)){codiad.active.save(source);codiad.active.close(source);instance.files.push(target);}}
instance.move(source,dest,ui.draggable);instance.out();},over:function(event,ui){$(this).addClass('drop_over');},out:function(event,ui){$(this).removeClass('drop_over');},move:function(source,dest,element){$.getJSON(this.path+"controller.php?action=move&source="+source+"&dest="+dest,function(json){codiad.message[json.status](json.message);if(json.status=="success"){element.context.parentElement.remove();codiad.filemanager.rescan(codiad.project.getCurrent());}});},isDir:function(element){log(element);return($(element).data('type')==='directory'||$(element).data('type')==='root');},getName:function(path){return path.substring(path.lastIndexOf("/"));},startsWith:function(string,needle){if(string.indexOf(needle)===0){return true;}else{return false;}},appendDrop:function(event,ui){var path=$(ui.draggable).attr('data-path');instance.__edit(path,"append");},insertDrop:function(event,ui){var path=$(ui.draggable).attr('data-path');instance.__edit(path,"insert");},__edit:function(path,type){$.getJSON(instance.path+'controller.php?action=getContent&path='+path,function(result){if(result.status=="success"){var active=codiad.editor.getActive();if(active===null){codiad.message.error("No Open Files");return false;}
if(type=="append"){active.navigateFileEnd();}
active.insert(result.content);codiad.message.success("Content "+type+"ed");}else{codiad.message.error(result.message);}});},__editEnabled:function(){var setting=localStorage.getItem('codiad.plugin.drag.insert');if(setting===null){return false;}else if(setting==="true"){return true;}
return false;}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.Duplicate.init();});codiad.Duplicate={path:curpath,file:"",init:function(){},showDialog:function(path){this.file=path;var name=this.getName(path);codiad.modal.load(400,this.path+"dialog.php?name="+name);},duplicate:function(path,name){var _this=this;if(typeof(path)=='undefined'){path=this.file;}
if(typeof(name)=='undefined'){name=$('#duplicate_name').val();codiad.modal.unload();}
$.getJSON(_this.path+"controller.php?action=duplicate&path="+path+"&name="+name,function(json){codiad.toast[json.status](json.message);codiad.filemanager.rescan(codiad.project.getCurrent());});},getName:function(path){return path.substring(path.lastIndexOf("/")+1);}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.Ignore.init();});codiad.Ignore={path:curpath,ignoreData:[],ignorePath:"",entries:0,line:"",init:function(){var _this=this;this.load();$.get(this.path+"template.html",function(html){_this.line=html;});amplify.subscribe("filemanager.onIndex",function(path){var buf=[];var fPath,result,ext,name;$.each(codiad.filemanager.indexFiles,function(i,item){fPath=item.name;name=_this.getName(fPath);ext=_this.getExtension(fPath);result=true;$.each(_this.ignoreData,function(index,rule){if(rule.range=="file"){if(fPath==rule.name){result=false;}}else if(rule.range=="name"){if(name==rule.name){result=false;}}else if(rule.range=="type"){var tExt=new RegExp(rule.name.replace("*","").replace(".","\\.")+"$");if(tExt.test(fPath)){result=false;}}
if(!result){return false;}});if(result){buf.push(item);}});codiad.filemanager.indexFiles=buf;});amplify.subscribe('settings.dialog.save',function(){if($('.ignore_display').length>0){codiad.Ignore.saveDialog();}});},showDialog:function(){var path=this.path.substring(this.path.indexOf(window.location.pathname))+"dialog.php?action=log";codiad.settings.show(path);},isDir:function(){$.getJSON(this.path+"controller.php?action=isDir&path="+this.ignorePath,function(json){var type="";if(json.result){$('#fileType').remove();type="directory";}else{type="file";}
$('#filePath').text("Ignore just this "+type);$('#fileGeneral').text("Ignore this "+type+" in every project");});},ignore:function(path){codiad.modal.load(300,this.path+"dialog.php?action=ignore");this.ignorePath=path;},setIgnore:function(){var obj={};obj.range=$('.ignore_range').val();if(obj.range=="file"){obj.name=this.ignorePath;}else if(obj.range=="name"){obj.name=this.getName(this.ignorePath);}else{obj.name="*."+this.getExtension(this.ignorePath);}
this.ignoreData.push(obj);this.save();codiad.filemanager.rescan(this.getDir(this.ignorePath));codiad.modal.unload();},load:function(){var _this=this;$.getJSON(this.path+"controller.php?action=load",function(json){_this.ignoreData=json;});},save:function(){var _this=this;$.post(this.path+"controller.php?action=save",{data:JSON.stringify(_this.ignoreData)},function(data){var json=JSON.parse(data);if(json.status=="error"){codiad.message.error(json.message);}});},loadDialog:function(){var _this=this;var line;$.each(this.ignoreData,function(i,item){line=_this.addRule();$('.ignore_rule_name[data-line="'+line+'"]').val(item.name);$('.ignore_range[data-line="'+line+'"]').val(item.range);});},addRule:function(){var number=this.entries++;var line=this.line.replace(new RegExp("__line__","g"),number);$('#ignore_list').append(line);this.setDelete();return number;},saveDialog:function(){var _this=this;var buf=[];var line;$('.ignore_line').each(function(i,item){var obj={"name":"","range":""};line=$(item).attr("data-line");obj.name=$('.ignore_rule_name[data-line="'+line+'"]').val();obj.range=$('.ignore_range[data-line="'+line+'"]').val();buf.push(obj);});this.ignoreData=buf;this.save();codiad.filemanager.rescan(codiad.project.getCurrent());},setDelete:function(){$('.ignore_remove').click(function(){var line=$(this).attr("data-line");$('.ignore_line[data-line="'+line+'"]').remove();return false;});},help:function(){codiad.modal.load(400,this.path+"dialog.php?action=help");},getDir:function(path){return path.substring(0,path.lastIndexOf("/"));},getName:function(path){return path.substring(path.lastIndexOf("/")+1);},getExtension:function(path){return path.substring(path.lastIndexOf(".")+1);}};})(this,jQuery);;(function(global,$){var codiad=global.codiad,scripts=document.getElementsByTagName('script'),path=scripts[scripts.length-1].src.split('?')[0],curpath=path.split('/').slice(0,-1).join('/')+'/';$(function(){codiad.Sass.init();});codiad.Sass={path:curpath,base:"",sass:null,tree:[],init:function(){var _this=this;$.getScript(this.path+"sass/sass.js",function(){Sass.setWorkerUrl(_this.path+'sass/sass.worker.js');_this.sass=new Sass();_this.sass.importer(_this.importer.bind(_this));});amplify.subscribe('context-menu.onShow',function(obj){if(/(\.sass|\.scss)$/.test(obj.path)){$('#context-menu').append('<hr class="file-only sass">');$('#context-menu').append('<a class="file-only sass" onclick="codiad.Sass.contextMenu($(\'#context-menu\').attr(\'data-path\'));"><span class="icon-code"></span>Compile Sass</a>');}});amplify.subscribe('context-menu.onHide',function(){$('.sass').remove();});},compile:function(scss,path,callback){var _this=this;setTimeout(function(){_this.setSettings(path);_this.sass.compile(scss,callback);},0);},contextMenu:function(path){this.processFile(path);},getIndentation:function(){if(codiad.editor.settings.softTabs){var length=parseInt(codiad.editor.settings.tabSize,10);var indent="";for(var i=0;i<length;i++){indent+=" ";}
return indent;}else{return"\t";}},getMatchingFileOutOfTree:function(path){var dir=this.__dirname(path);var basename=this.__basename(path);if(dir==path){dir="";}else{dir+="/";}
var cases=["_"+basename+".scss","_"+basename+".sass",basename+".scss",basename+".sass","_"+basename+".css",basename+".css"];for(var j=0;j<this.tree.length;j++){for(var i=0;i<cases.length;i++){if(this.tree[j]===(dir+cases[i])){return this.tree[j];}}}
return false;},importer:function(request,done){var path=this.getMatchingFileOutOfTree(request.current);if(path===false){var result={};result.error="File not found";done(result);return;}else{path=this.base+"/"+path;}
$.getJSON(this.path+'controller.php?action=getContent&path='+path,function(response){var result={};if(response.status=="success"){result.content=response.content;}else{result.error=response.message;}
done(result);});},processFile:function(path){var _this=this;this.base=this.__dirname(path);$.getJSON(this.path+'controller.php?action=getContent&path='+path,function(json){if(json.status=="success"){$.getJSON(_this.path+'controller.php?action=getFileTree&path='+path,function(tree){_this.tree=tree.tree;_this.compile(json.content,path,function(result){if(result.status===0){$.post(_this.path+'controller.php?action=saveContent&path='+path,{content:result.text},function(response){response=JSON.parse(response);if(response.status=="success"){codiad.filemanager.rescan($('#project-root').attr('data-path'));}
codiad.toast[response.status](response.message);});}else{codiad.toast.error(result.message+" on Line "+result.line+" Column "+result.column);}});});}else{codiad.toast.error(json.message);}});},setSettings:function(path){var _this=this;this.sass.options({style:Sass.style.compressed,indent:_this.getIndentation(),},function(){});},__basename:function(path,suffix){var b=path;var lastChar=b.charAt(b.length-1);if(lastChar==='/'||lastChar==='\\'){b=b.slice(0,-1);}
b=b.replace(/^.*[\/\\]/g,'');if(typeof suffix==='string'&&b.substr(b.length-suffix.length)==suffix){b=b.substr(0,b.length-suffix.length);}
return b;},__dirname:function(path){return path.replace(/\\/g,'/').replace(/\/[^\/]*\/?$/,'');}};})(this,jQuery);;